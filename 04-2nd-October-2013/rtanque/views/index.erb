<!doctype html>
<html lang="en">

	<head>
		<meta charset="utf-8">

		<title>RTanque Presentation</title>

		<meta name="description" content="A framework for easily creating beautiful presentations using HTML">
		<meta name="author" content="Hakim El Hattab">

		<meta name="apple-mobile-web-app-capable" content="yes" />
		<meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />

		<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">

		<link rel="stylesheet" href="css/reveal.css">
		<link rel="stylesheet" href="css/theme/night.css" id="theme">

		<!-- For syntax highlighting -->
		<link rel="stylesheet" href="lib/css/zenburn.css">

		<script src="//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>

		<!-- If the query includes 'print-pdf', use the PDF print sheet -->
		<script>
			document.write( '<link rel="stylesheet" href="css/print/' + ( window.location.search.match( /print-pdf/gi ) ? 'pdf' : 'paper' ) + '.css" type="text/css" media="print">' );
		</script>


		<!--[if lt IE 9]>
		<script src="lib/js/html5shiv.js"></script>
		<![endif]-->
	</head>

	<body>

		<div class="reveal">

			<!-- Any section element inside of this container is displayed as a slide -->
			<div class="slides">

				<section>
					<img src="images/rtanque.png" >
					
					<h2>RTanque</h2>
					https://github.com/awilliams/RTanque

				</section>

				<section>
					
					<iframe width="960" height="720" src="//www.youtube.com/embed/tOYYhyh1q98" frameborder="0" allowfullscreen></iframe>

				</section>
				
				<section>
					Setup

					<pre><code data-trim contenteditable style="font-size: 18px;">
$ git clone https://github.com/awilliams/RTanque
$ cd RTanque
$ bundle
$ bundle exec rtanque start sample_bots/seek_and_destroy:x4
					</code></pre>
				</section>

				<section>

					<section>
						Build your RTank!

						<pre><code data-trim contenteditable style="font-size: 18px;">
$ bundle exec rtanque new_bot jimmy_bot
						</code></pre>

					</section>
					
					<section>

						<p>RTanque::Bot::Brain</p>

						<ul>
							<li class="fragment">Brain#sensors</li>
							<li class="fragment">Brain#command</li>
							<li class="fragment">RTanque::Heading</li>
						</ul>

					</section>

					<section>

						<pre><code data-trim contenteditable style="font-size: 18px;">
sensors.ticks # Integer
sensors.health # Float
sensors.position # RTanque::Point
sensors.heading # RTanque::Heading
sensors.speed # Float
sensors.radar_heading # RTanque::Heading
sensors.turret_heading # RTanque::Heading
sensors.radar.each do |scanned_bot|
	# scanned_bot: RTanque::Bot::Radar::Reflection
	# Reflection(:heading, :distance, :name)
end
						</code></pre>

					</section>

					<section>

						<pre><code data-trim contenteditable style="font-size: 18px;">
command.speed = 1
command.heading = Math::PI / 2.0
command.radar_heading = Math::PI
command.turret_heading = Math::PI
command.fire(3)
    				</code></pre>
						
					</section>

					<section>

						<pre><code data-trim contenteditable style="font-size: 18px;">
RTanque::Heading.new(Math::PI)
=> &lt;RTanque::Heading: 3.141592653589793rad 180.0deg&gt;

RTanque::Heading.new_from_degrees(180)
=> &lt;RTanque::Heading: 3.141592653589793rad 180.0deg&gt;

RTanque::Heading.new_from_degrees(180) + RTanque::Heading.new(Math::PI)
=> &lt;RTanque::Heading: 0.0rad 0.0deg&gt;

RTanque::Heading.new(Math::PI) + (Math::PI / 2.0)
=> &lt;RTanque::Heading: 4.71238898038469rad 270.0deg&gt;

RTanque::Heading.new == 0
=> true

    				</code></pre>
						
					</section>

				</section>



				<section>
					Share and collaborate with other RTanks

					<pre><code data-trim contenteditable style="font-size: 18px;">
$ bundle exec rtanque get_gist &lt;gist_id&gt;
					</code></pre>
				</section>

				

				<section>
					Let's Code !!!
				</section>
			
			</div>


		</div>

		<script src="lib/js/head.min.js"></script>
		<script src="js/reveal.min.js"></script>

		<script>

			// Full list of configuration options available here:
			// https://github.com/hakimel/reveal.js#configuration
			Reveal.initialize({
				controls: true,
				progress: true,
				history: true,
				center: true,

				theme: Reveal.getQueryHash().theme, // available themes are in /css/theme
				transition: Reveal.getQueryHash().transition || 'default', // default/cube/page/concave/zoom/linear/fade/none

				// Optional libraries used to extend on reveal.js
				dependencies: [
					{ src: 'lib/js/classList.js', condition: function() { return !document.body.classList; } },
					{ src: 'plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
					{ src: 'plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
					{ src: 'plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } },
					{ src: 'plugin/zoom-js/zoom.js', async: true, condition: function() { return !!document.body.classList; } },
					{ src: 'plugin/notes/notes.js', async: true, condition: function() { return !!document.body.classList; } }
					// { src: 'plugin/search/search.js', async: true, condition: function() { return !!document.body.classList; } }
					// { src: 'plugin/remotes/remotes.js', async: true, condition: function() { return !!document.body.classList; } }
				]
			});

		</script>

	</body>
</html>
